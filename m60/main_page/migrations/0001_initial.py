# Generated by Django 5.2.1 on 2025-06-02 13:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PageInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telephone', models.CharField(max_length=13, verbose_name='Телефон компании')),
                ('watsapp_link', models.URLField(blank=True, null=True, verbose_name='Ссылка на WhatsApp')),
                ('telegram_link', models.URLField(blank=True, null=True, verbose_name='Ссылка на Telegram')),
                ('address', models.TextField(verbose_name='Адрес компании')),
                ('hotline_telephone', models.CharField(max_length=13, verbose_name='Горячая линия')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('subtitle', models.CharField(max_length=100, verbose_name='Подзаголовок')),
                ('description', models.TextField(verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена заявки')),
                ('price_button', models.CharField(max_length=100, verbose_name='Текст кнопки цены заявки')),
                ('price_description', models.CharField(max_length=100, verbose_name='Описание цены заявки')),
                ('exam_pass_rate', models.PositiveIntegerField(verbose_name='Процент сдачи в ГИБДД')),
                ('theory_pass_rate', models.PositiveIntegerField(verbose_name='Процент сдачи теории')),
                ('cars_count', models.PositiveIntegerField(verbose_name='Количество автомобилей')),
                ('instructors_count', models.PositiveIntegerField(verbose_name='Количество инструкторов')),
                ('services_title', models.CharField(max_length=100, verbose_name='Заголовок услуг')),
                ('services_subtitle', models.CharField(max_length=100, verbose_name='Подзаголовок услуг')),
                ('additional_services_title', models.CharField(max_length=100, verbose_name='Заголовок доп услуг')),
                ('additional_services_subtitle', models.CharField(max_length=100, verbose_name='Подзаголовок доп услуг')),
                ('advantage_title', models.CharField(max_length=100, verbose_name='Заголовок преимущество')),
                ('advantage_subtitle', models.CharField(max_length=100, verbose_name='Подзаголовок преимущество')),
                ('about_us_title', models.CharField(max_length=100, verbose_name='Заголовок о нас')),
                ('about_us_subtitle', models.CharField(max_length=100, verbose_name='Подзаголовок о нас')),
                ('about_us_description', models.TextField(verbose_name='Описание о нас')),
                ('about_us_button', models.TextField(verbose_name='Текст кнопки о нас')),
                ('instructor_title', models.CharField(max_length=100, verbose_name='Заголовок о нас')),
                ('instructor_subtitle', models.CharField(max_length=100, verbose_name='Подзаголовок о нас')),
                ('stage_title', models.CharField(max_length=100, verbose_name='Заголовок этапы')),
                ('stage_subtitle', models.CharField(max_length=100, verbose_name='Подзаголовок этапы')),
                ('reviews_title', models.CharField(max_length=100, verbose_name='Заголовок отзывы')),
                ('reviews_subtitle', models.CharField(max_length=100, verbose_name='Подзаголовок отзывы')),
                ('reviews_google_rating', models.DecimalField(decimal_places=1, max_digits=2, verbose_name='Оценка Google')),
                ('reviews_yandex_rating', models.DecimalField(decimal_places=1, max_digits=2, verbose_name='Оценка Yandex')),
                ('reviews_2gis_rating', models.DecimalField(decimal_places=1, max_digits=2, verbose_name='Оценка 2GIS')),
                ('start_education_title', models.CharField(max_length=100, verbose_name='Заголовок начать обучение')),
                ('start_education_description', models.CharField(max_length=100, verbose_name='Описание начать обучение')),
                ('start_education_image', models.ImageField(blank=True, null=True, upload_to='main_page/', verbose_name='Изображение начать обучение')),
                ('faq_title', models.CharField(max_length=100, verbose_name='Заголовок FAQ')),
            ],
            options={
                'verbose_name': 'Информация главной страницы',
                'verbose_name_plural': 'Информация главной страницы',
            },
        ),
        migrations.CreateModel(
            name='Instructors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('subtitle', models.CharField(max_length=100, verbose_name='Подзаголовок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, null=True, upload_to='instructors/', verbose_name='Изображение')),
                ('experience', models.CharField(max_length=100, verbose_name='Стаж')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructors_items', to='main_page.pageinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faq_items', to='main_page.pageinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Advantage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advantage_type', models.CharField(choices=[('small', 'Небольшая информация'), ('big', 'Большая информация'), ('image', 'Картинка'), ('video', 'Приведи друга')], max_length=50, verbose_name='Тип преимущества')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок')),
                ('subtitle', models.CharField(blank=True, max_length=100, null=True, verbose_name='Подзаголовок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, null=True, upload_to='advantages/', verbose_name='Изображение')),
                ('video_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на видео')),
                ('button_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Текст левой кнопки')),
                ('detailed_button_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Текст правой кнопки')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advantage_items', to='main_page.pageinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdditionalServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('price_description', models.CharField(max_length=100, verbose_name='Описание для цены')),
                ('button', models.CharField(max_length=100, verbose_name='Текст кнопки')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_service_items', to='main_page.pageinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, verbose_name='Оценка')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('date', models.DateField(verbose_name='Дата')),
                ('type', models.CharField(choices=[('2gis', '2GIS'), ('google', 'Google'), ('yandex', 'Yandex')], max_length=50, verbose_name='Место отзыва')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_items', to='main_page.pageinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewsVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на видео')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_video_items', to='main_page.pageinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('duration', models.CharField(max_length=50, verbose_name='Продолжительность')),
                ('description', models.TextField(verbose_name='Описание услуги')),
                ('group_start', models.CharField(max_length=100, verbose_name='Набор в группу')),
                ('service_description_title', models.CharField(max_length=100, verbose_name='Заголовок описания услуги')),
                ('service_desctiption_subtitle_1', models.CharField(max_length=100, verbose_name='Подзаголовок описание услуги 1')),
                ('service_desctiption_subtitle_2', models.CharField(max_length=100, verbose_name='Подзаголовок описание услуги 2')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('price_description', models.CharField(max_length=100, verbose_name='Описание для цены')),
                ('confirm_button', models.CharField(max_length=100, verbose_name='Текст кнопки подтверждения')),
                ('installment_button', models.CharField(max_length=100, verbose_name='Текст кнопки рассрочки')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_items', to='main_page.pageinfo')),
            ],
            options={
                'verbose_name': 'Курс для начинающих водителей',
                'verbose_name_plural': 'Курсы для начинающих водителей',
            },
        ),
        migrations.CreateModel(
            name='IncludedService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.CharField(max_length=200, verbose_name='Пункт')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='included_services', to='main_page.service')),
            ],
            options={
                'verbose_name': 'Включенная услуга',
                'verbose_name_plural': 'Включенные услуги',
            },
        ),
        migrations.CreateModel(
            name='ServiceSubtitle1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.CharField(max_length=200, verbose_name='Пункт')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_subtitle_items_1', to='main_page.service')),
            ],
            options={
                'verbose_name': 'Пункты под подзаголовком услуг 1',
                'verbose_name_plural': 'Пункты под подзаголовком услуг 1',
            },
        ),
        migrations.CreateModel(
            name='ServiceSubtitle2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.CharField(max_length=200, verbose_name='Пункт')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_subtitle_items_2', to='main_page.service')),
            ],
            options={
                'verbose_name': 'Пункты под подзаголовком услуг 2',
                'verbose_name_plural': 'Пункты под подзаголовком услуг 2',
            },
        ),
        migrations.CreateModel(
            name='Stages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages_items', to='main_page.pageinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('content', models.CharField(max_length=100, verbose_name='Содержание')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistic_items', to='main_page.pageinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
